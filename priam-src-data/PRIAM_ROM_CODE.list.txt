     0:                                 XDEF    rom            ; Lisa PRIAM interface card ROM 2716 labeled "PEI 2324  Apple/Priam  Boot"          0: '..'                            DC.B    $E0,5     2: '..'                   data1    DC.B    0,$F8     4:                                 QUAL    proc2 ; b# =3  s#1  =proc2     4: 6008           100000E proc2    BRA.S   Status     6: 600C                   data2    BRA.S   Boot     8: '......'               data3    DC.W    $1C1,0,0                                 ;-refs - proc2          E: 4A69 1FFF      'Ji..'  Status   TST     $1FFF(A1)      ; read interface status    12: 4E75           'Nu'             RTS         14:                                 QUAL    proc4 ; b# =7  s#1  =proc4    14: 47E9 1FFF      'G...'  Boot     LEA     $1FFF(A1),A3   ; point to base address of slot high    18: 41FA FFF0      100000A          LEA     data4,A0       ; storage    1C: 208B           ' .'             MOVE.L  A3,(A0)        ; save base address    1E: 0C2B 00FF 00C0 '.+....'         CMPI.B  #$FF,$C0(A3)   ; read status 0 - simple check for drive attached     24: 6600 008C      10000B2          BNE     proc9          ; if something attached    28: 7050           'pP'             MOVEQ   #80,D0         ; error code    2A: 6052           100007E          BRA.S   lac_5          ; return error 80                                 ;-refs - proc9         2C: 1740 0080      '.@..'  proc5    MOVE.B  D0,$80(A3)  ; command    30: 082B 0003 00C0 '.+....'         BTST    #3,$C0(A3)  ; status, bit 3 is interface busy    36: 6736           100006E          BEQ.S   ReturnError ; interface should be busy    38: 243C 0001 BBE4 '$<.... lac_1    MOVE.L  #$1BBE4,D2  ; inner timeout counter    3E: 082B 0006 00C0 '.+.... lac_2    BTST    #6,$C0(A3)  ; status, bit 6 is Command Completion Request    44: 6608           100004E          BNE.S   lac_3    46: 5382           'S.'             SUBQ.L  #1,D2    48: 6EF4           100003E          BGT     lac_2    4A: 5341           'SA'             SUBQ    #1,D1       ; outer timeout counter, passed from caller    4C: 6EEA           1000038          BGT     lac_1       ; if timeout, check result anyway instead of assuming error    4E: E058           '.X'    lac_3    ROR     #8,D0       ; move expected result to low byte    50: B02B 00C4      '.+..'           CMP.B   $C4(A3),D0  ; result 0: check if it matches calling parameter    54: 6618           100006E          BNE.S   ReturnError                                 ;-refs - proc9         56: 72FF           'r.'    proc6    MOVEQ   #-1,D1      ; timeout counter    58: 4242           'BB'             CLR     D2    5A: 1742 0080      '.B..'           MOVE.B  D2,$80(A3)  ; command, 0 = Command Completion Acknowledge    5E: 082B 0003 00C0 '.+.... lac_4    BTST    #3,$C0(A3)  ; status, bit 3 is interface busy    64: 57C9 FFF8      100005E          DBEQ    D1,lac_4    68: 6604           100006E          BNE.S   ReturnError    6A: 4240           'B@'             CLR     D0    6C: 4E75           'Nu'             RTS                                      ;-refs - proc5     proc6     proc9                                      ReturnError    6E: 3200           '2.'             MOVE    D0,D1    70: 4841           'HA'             SWAP    D1    72: 7052           'pR'             MOVEQ   #82,D0      ; error code    74: 122B 00C0      '.+..'           MOVE.B  $C0(A3),D1  ; status    78: E149           '.I'             LSL     #8,D1    7A: 122B 00C4      '.+..'           MOVE.B  $C4(A3),D1  ; result 0    7E: 48E7 C000      'H...'  lac_5    MOVEM.L D0-D1,-(A7)    82: 6114           1000098          BSR.S   Beep    84: 6112           1000098          BSR.S   Beep    86: 6110           1000098          BSR.S   Beep    88: 4CDF 0003      'L...'           MOVEM.L (A7)+,D0-D1    8C: 45FA 0136      10001C4          LEA     data6,A2    ; icon pointer    90: 97CB           '..'             SUBA.L  A3,A3       ; message pointer    92: 4EF9 00FE 0084 'N.....'         JMP.L   $FE0084     ; return to ROM                                 ;-refs - ReturnError      98: 7020           'p '    Beep     MOVEQ   #32,D0      ; frequency    9A: 323C 00FA      '2<..'           MOVE    #$FA,D1     ; duration    9E: 7404           't.'             MOVEQ   #4,D2       ; volume    A0: 4EB9 00FE 00B8 'N.....'         JSR.L   $FE00B8     ; ROM Beep    A6: 203C 0000 61A8 ' <..a.'         MOVE.L  #$61A8,D0   ; post beep delay    AC: 5380           'S.'    lac_6    SUBQ.L  #1,D0    AE: 6EFC           10000AC          BGT     lac_6    B0: 4E75           'Nu'             RTS                                      ;-refs - proc4         B2: 61A2           1000056 proc9    BSR     proc6    B4: 303C 1607      '0<..'           MOVE    #$1607,D0      ; command 7 = Software Reset, expected result 16 = Initialization Complete    B8: 7205           'r.'             MOVEQ   #5,D1          ; timeout counter    BA: 6100 FF70      100002C          BSR     proc5          ; do command and check result    BE: 1740 0084      '.@..'           MOVE.B  D0,$84(A3)     ; parameter 0: drive select. Bits: 0,0,0,0,0,0,D1-D0    C2: 1740 0086      '.@..'           MOVE.B  D0,$86(A3)     ; parameter 1:     C6: 1740 0088      '.@..'           MOVE.B  D0,$88(A3)     ; parameter 2:    CA: 1740 008A      '.@..'           MOVE.B  D0,$8A(A3)     ; parameter 3:    CE: 1740 008C      '.@..'           MOVE.B  D0,$8C(A3)     ; parameter 4:    D2: 1740 008E      '.@..'           MOVE.B  D0,$8E(A3)     ; parameter 5:    D6: 303C 0082      '0<..'           MOVE    #$82,D0        ; command 82 = Sequence Up & Wait, expected result 0    DA: 721E           'r.'             MOVEQ   #30,D1         ; timeout counter    DC: 6100 FF4E      100002C          BSR     proc5    E0: 177C 0040 0086 '.|.@..'         MOVE.B  #64,$86(A3)    ; parameter 1: bit 6 = Enable Logical Sector Mode    E6: 303C 0008      '0<..'           MOVE    #8,D0          ; command 8 = Specify SMART Mode (SMART-E only), expected result 0    EA: 7201           'r.'             MOVEQ   #1,D1          ; timeout counter    EC: 6100 FF3E      100002C          BSR     proc5    F0: 4281           'B.'             CLR.L   D1    F2: 43FA 0102      10001F6          LEA     data7,A1    ; tag buffer    F6: 45FA 0116      100020E          LEA     data8,A2    ; data buffer    FA: 6100 001C      1000118          BSR     proc10      ; read sector    FE: 4A40           'J@'             TST     D0          ; success?   100: 6600 FF6C      100006E          BNE     ReturnError ;   104: 3029 0004      '0)..'           MOVE    4(A1),D0    ; check for BOOT tags   108: 0C40 AAAA      '.@..'           CMPI    #$AAAA,D0   ; indicated BOOTable   10C: 6700 0008      1000116          BEQ     lac_7       ; if bootable   110: 7054           'pT'             MOVEQ   #84,D0      ; error code   112: 4EFA FF6A      100007E          JMP     lac_5          116: 4E92           'N.'    lac_7    JSR     (A2)        ; call data read from sector 0                                 ;-refs - proc9        ; SMART register / Lisa address coding   ; Slot High + ...   ; $02 = HAD0   ; $04 = HAD1   ; $08 = HAD2   ; $10 = Unknown (HAD3??)   ; $20 = Parity Reset   ; $40 = Async DTACK   ; $80 = Byte/Word   ; $100 = Interrupt Enable   ; $200 = Read Latches without clocking data
     ; $400 = Fast Cycle   118: 48E7 2070      'H. p'  proc10   MOVEM.L D2/A1-A3,-(A7)   11C: 267A FEEC      100000A          MOVEA.L data4,A3       ; restore slot high base address   120: 1741 008A      '.A..'           MOVE.B  D1,$8A(A3)     ; parameter 3: logical sector number MSB. address HAD2,HAD0,HWR   124: E089           '..'             LSR.L   #8,D1   126: 1741 0088      '.A..'           MOVE.B  D1,$88(A3)     ; parameter 2: logical sector number MidByte. address HAD2,HWR   12A: E089           '..'             LSR.L   #8,D1   12C: 1741 0086      '.A..'           MOVE.B  D1,$86(A3)     ; parameter 1: logical sector number LSB, address HAD0,HAD1,HWR   130: 177C 0001 008C '.|....'         MOVE.B  #1,$8C(A3)     ; parameter 4: sector count. Bits: 0, M6-M0, address HAD1,HAD2,HWR   136: 177C 0053 0080 '.|.S..'         MOVE.B  #83,$80(A3)    ; command code: $53 is read with retries command, address HWR   13C: 223C 0004 93E0 '"<....'         MOVE.L  #$493E0,D1     ; timeout count: 300000 loops   142: 082B 0002 00C0 '.+.... lac_8    BTST    #2,$C0(A3)     ; status: bit 2 is Data Transfer Request, address HRD, DTACK   148: 6610           100015A          BNE.S   lac_10         ; if drive ready to transfer, go transfer data   14A: 082B 0006 00C0 '.+....'         BTST    #6,$C0(A3)     ; status: bit 6 is Command Completion Request, address HRD, DTACK   150: 6640           1000192          BNE.S   lac_14         ; error if command complete before data transfer request   152: 5381           'S.'             SUBQ.L  #1,D1   154: 6EEC           1000142          BGT     lac_8   156: 7055           'pU'    lac_9    MOVEQ   #85,D0   158: 603A           1000194          BRA.S   lac_15   15A: 41EB 0022      'A.."'  lac_10   LEA     34(A3),A0      ; data read address, HAD0, RD   15E: 4A50           'JP'             TST     (A0)           ; get/ignore 1 word, 2 bytes or start sequencer   160: 700B           'p.'             MOVEQ   #11,D0         ; get 12 words, 24 bytes   162: 32D0           '2.'    lac_11   MOVE    (A0),(A1)+   164: 51C8 FFFC      1000162          DBRA    D0,lac_11   168: 303C 00FE      '0<..'           MOVE    #$FE,D0        ; get 255 words, 510 bytes   16C: 34D0           '4.'    lac_12   MOVE    (A0),(A2)+   16E: 51C8 FFFC      100016C          DBRA    D0,lac_12   172: 34AB 0200      '4...'           MOVE    $200(A3),(A2)  ; get 1 word, 2 bytes, and signal end of transfer   176: 267A FE92      100000A          MOVEA.L data4,A3       ; restore slot high base address   17A: 72FF           'r.'             MOVEQ   #-1,D1   17C: 082B 0006 00C0 '.+.... lac_13   BTST    #6,$C0(A3)     ; status: bit 6 is Command Completion Request   182: 56C9 FFF8      100017C          DBNE    D1,lac_13      ; wait for command complete   186: 67CE           1000156          BEQ     lac_9          ; if timeout, then error   188: 102B 00C4      '.+..'           MOVE.B  $C4(A3),D0     ; result 0: bits D1-D0, T1-T0, CC3-CC0   18C: 0240 00F0      '.@..'           ANDI    #$F0,D0        ; keep drive and completion type bits   190: 6712           10001A4          BEQ.S   lac_16         ; high nibble 0 if drive 0 indicates normal completion   192: 7053           'pS'    lac_14   MOVEQ   #83,D0         ; error code   194: 223C 0053 0000 '"<.S.. lac_15   MOVE.L  #$530000,D1    ; irrelevant... bug?   19A: 122B 00C0      '.+..'           MOVE.B  $C0(A3),D1     ; status   19E: E149           '.I'             LSL     #8,D1   1A0: 122B 00C4      '.+..'           MOVE.B  $C4(A3),D1     ; result 0   1A4: 72FF           'r.'    lac_16   MOVEQ   #-1,D1         ; timeout counter   1A6: 4242           'BB'             CLR     D2   1A8: 1742 0080      '.B..'           MOVE.B  D2,$80(A3)     ; command code: $00 is Completion Acknowledge   1AC: 082B 0003 00C0 '.+.... lac_17   BTST    #3,$C0(A3)     ; status: bit 3 is Interface Busy   1B2: 57C9 FFF8      10001AC          DBEQ    D1,lac_17      ; wait for not busy   1B6: 6702           10001BA          BEQ.S   lac_18         ;    1B8: 7055           'pU'             MOVEQ   #85,D0         ; error code   1BA: 4CDF 0E04      'L...'  lac_18   MOVEM.L (A7)+,D2/A1-A3   1BE: 4E75           'Nu'             RTS        1C0: '....'                 data5    DC.W    $81,$1C4                                 ;-refs - ReturnError     1C4: '........|.......'     data6    DC.W    $FFFF,$CFFF,$FEF3,$7FFC,$7C01,$C080,$FFFF,$7F80   1D4: '......|.T.......'              DC.W    $CF01,$C0F3,$7FFC,$7C7F,$54A8,$FFFF,$FFFF,$FFFF   1E4: '....a...........'              DC.W    $FFFF,$FFFF,$610F,$7FFD,$E00F,$F8FF,$FFE0,$FF00   1F4: ']l'                            DC.W    $5D6C                                 ;-refs - proc9        1F6: '................'     data7    DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   206: '........'                      DC.W    $FFFF,$FFFF,$FFFF,$FFFF                                 ;-refs - proc9        20E: '................'     data8    DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   21E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   22E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   23E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   24E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   25E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   26E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   27E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   28E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   29E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   2AE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   2BE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   2CE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   2DE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   2EE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   2FE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   30E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   31E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   32E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   33E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   34E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   35E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   36E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   37E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   38E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   39E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   3AE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   3BE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   3CE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   3DE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   3EE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   3FE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   40E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   41E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   42E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   43E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   44E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   45E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   46E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   47E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   48E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   49E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   4AE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   4BE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   4CE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   4DE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   4EE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   4FE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   50E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   51E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   52E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   53E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   54E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   55E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   56E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   57E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   58E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   59E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   5AE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   5BE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   5CE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   5DE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   5EE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   5FE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   60E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   61E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   62E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   63E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   64E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   65E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   66E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   67E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   68E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   69E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   6AE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   6BE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   6CE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   6DE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   6EE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   6FE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   70E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   71E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   72E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   73E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   74E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   75E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   76E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   77E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   78E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   79E: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   7AE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   7BE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   7CE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   7DE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   7EE: '................'              DC.W    $FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF,$FFFF   7FE: '..'                            DC.W    $FFFF   800:                                 END     